plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kr.onekey'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
	all {
		exclude group:'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
	maven { url "https://plugins.gradle.org/m2/" }
}

ext {
	querydslPluginVersion = '1.0.10'
	awsSdkVersion = '1.11.655'
	commonFileUploadVersion = '1.3.3'
	springBootVersion = '2.0.6.RELEASE'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.firebase:firebase-admin:7.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//json
	implementation "org.json:json:20190722"
	compile('com.google.code.gson:gson:2.8.5')

	// dsl
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
	compile("com.querydsl:querydsl-jpa")
	compile("com.querydsl:querydsl-apt")
	runtimeOnly 'mysql:mysql-connector-java'
}

def querydslSrcDir = 'src/main/genarated'

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

test {
	useJUnitPlatform()
}